<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Installs and configures OpenLDAP &#xd;
&#xd;
Configures LDAP to be used as backend for the IdP by filling in the shibboleth LDAP configuration file (ldap.properties)&#xd;
Loads relevant LDAP schemas (including eduPerson 201310)&#xd;
&#xd;
Accepted options:&#xd;
&#xd;
LDAP_ADMIN_PW                    (optional)    changeit&#xd;
LDAP_SEARCH_BASE_DN      (optional)    ou=people,dc=my-domain,dc=com&#xd;
LDAP_BIND_DN                       (optional)    cn=Manager,dc=my-domain,dc=com</description>
  <keepDependencies>false</keepDependencies>
  <properties>
  <assignedNode>ldap-server</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>LDAP_ADMIN_PW=${LDAP_ADMIN_PW:-changeit}
LDAP_BIND_DN=${LDAP_BIND_DN:-cn=Manager,dc=my-domain,dc=com}
LDAP_SEARCH_BASE_DN=${LDAP_SEARCH_BASE_DN:-ou=people,dc=my-domain,dc=com}

LDAP_CERT=&quot;/etc/openldap/certs/ldapcert.pem&quot;
LDAP_KEY=&quot;/etc/openldap/certs/ldapkey.pem&quot;
LDAP_CONF=&quot;/etc/openldap/slapd.d/cn=config.ldif&quot;
LDAP_CONF_DB=&quot;/etc/openldap/slapd.d/cn=config/olcDatabase={2}hdb.ldif&quot;
LDAP_CONF_DB_MON=&quot;/etc/openldap/slapd.d/cn=config/olcDatabase={1}monitor.ldif&quot;
SHIB_LDAP_CONFIG=&quot;/opt/shibboleth-idp/conf/ldap.properties&quot; 

##############################################################################################


# generate self signed certificate for ldap. shibboleth-idp will have to trust this
sudo openssl req -newkey rsa:2048 -x509 -nodes -out ${LDAP_CERT} -keyout ${LDAP_KEY} -days 365 \
        -subj &quot;/C=NL/L=Example/O=LDAP Server/CN=`hostname`&quot;
sudo chmod 600 ${LDAP_CERT}
sudo chmod 400 ${LDAP_KEY}
sudo chown ldap:ldap ${LDAP_CERT} ${LDAP_KEY}

# configure ldap server certificate
sudo sed -i &quot;s#olcTLSCertificateFile:.*#olcTLSCertificateFile: ${LDAP_CERT}#&quot;  ${LDAP_CONF}
sudo sed -i &quot;s#olcTLSCertificateKeyFile:.*#olcTLSCertificateKeyFile: ${LDAP_KEY}#&quot;  ${LDAP_CONF}
sudo sed -i &apos;/^#.*/d&apos; ${LDAP_CONF}

# configure admin user
LDAP_ADMIN_PW_HASH=`slappasswd -s ${LDAP_ADMIN_PW}`
if [ -z &quot;`sudo grep &apos;^olcRootPW&apos; ${LDAP_CONF_DB}`&quot; ]; then
    echo &quot;olcRootPW: ${LDAP_ADMIN_PW_HASH}&quot; | sudo tee -a ${LDAP_CONF_DB}
else
    sudo sed -i &quot;s;^#*olcRootPW:.*;olcRootPW: ${LDAP_ADMIN_PW_HASH};&quot; ${LDAP_CONF_DB}
fi

if [ &quot;${LDAP_BIND_DN}&quot; != &quot;`sudo grep olcRootDN:  &quot;${LDAP_CONF_DB}&quot; | cut -d &apos;:&apos; -f 2 | tr -d &apos; &apos;`&quot; ]; then
    sudo sed -i &quot;s/^#*olcRootDN:.*/olcRootDN: ${LDAP_BIND_DN}/&quot; ${LDAP_CONF_DB}
    sudo sed -i &quot;s/read by dn.base=\&quot;.*\&quot;/read by dn.base=\&quot;${LDAP_BIND_DN}\&quot; /&quot; ${LDAP_CONF_DB_MON}
fi

sudo sed -i &apos;/^#.*/d&apos; ${LDAP_CONF_DB}

# start service 
sudo service slapd stop || echo &apos;stopped?&apos;
sleep 10
sudo service slapd start

##############################################################################################

# copy ldap certificate into shibboleth trusted cert
sudo \cp -fp &quot;${LDAP_CERT}&quot; /opt/shibboleth-idp/credentials/ldap-server.crt
sudo chown tomcat:tomcat /opt/shibboleth-idp/credentials/ldap-server.crt

# change ldap configuration to match setup
sudo sed -i &quot;s/^#*idp.authn.LDAP.authenticator.*/idp.authn.LDAP.authenticator = anonSearchAuthenticator/&quot; ${SHIB_LDAP_CONFIG}
sudo sed -i &quot;s/^#*idp.authn.LDAP.ldapURL.*/idp.authn.LDAP.ldapURL = ldap:\/\/`hostname`:389/&quot; ${SHIB_LDAP_CONFIG}
sudo sed -i &quot;s/^#*idp.authn.LDAP.useStartTLS.*/idp.authn.LDAP.useStartTLS = true/&quot; ${SHIB_LDAP_CONFIG}
sudo sed -i &quot;s/^#*idp.authn.LDAP.useSSL.*/idp.authn.LDAP.useSSL = false/&quot; ${SHIB_LDAP_CONFIG}
sudo sed -i &quot;s/^#*idp.authn.LDAP.sslConfig.*/idp.authn.LDAP.sslConfig = certificateTrust/&quot; ${SHIB_LDAP_CONFIG}
sudo sed -i &quot;s/^#*idp.authn.LDAP.returnAttributes.*/idp.authn.LDAP.returnAttributes = uid,cn,mail/&quot; ${SHIB_LDAP_CONFIG}
sudo sed -i &quot;s/^#*idp.authn.LDAP.baseDN.*/idp.authn.LDAP.baseDN = ${LDAP_SEARCH_BASE_DN}/&quot; ${SHIB_LDAP_CONFIG}
sudo sed -i &quot;s/^#*idp.authn.LDAP.bindDN\s*=.*/idp.authn.LDAP.bindDN = ${LDAP_BIND_DN}/&quot; ${SHIB_LDAP_CONFIG}
sudo sed -i &quot;s/^#*idp.authn.LDAP.bindDNCredential.*/idp.authn.LDAP.bindDNCredential = ${LDAP_ADMIN_PW}/&quot; ${SHIB_LDAP_CONFIG}

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>cat &gt; eduPerson.ldif &lt;&lt;EOF
# Retrived from:
#  software.internet2.edu/eduperson/internet2-mace-dir-eduperson-201310.html
# On:
#  2013-11-26

dn: cn=eduperson,cn=schema,cn=config
changetype: add
objectClass: olcSchemaConfig
cn: eduperson
olcAttributeTypes: {0}( 1.3.6.1.4.1.5923.1.1.1.1 NAME &apos;eduPersonAffiliation&apos; D
 ESC &apos;eduPerson per Internet2 and EDUCAUSE&apos; EQUALITY caseIgnoreMatch SUBSTR ca
 seIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )
olcAttributeTypes: {1}( 1.3.6.1.4.1.5923.1.1.1.2 NAME &apos;eduPersonNickname&apos; DESC
  &apos;eduPerson per Internet2 and EDUCAUSE&apos; EQUALITY caseIgnoreMatch SUBSTR caseI
 gnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )
olcAttributeTypes: {2}( 1.3.6.1.4.1.5923.1.1.1.3 NAME &apos;eduPersonOrgDN&apos; DESC &apos;e
 duPerson per Internet2 and EDUCAUSE&apos; EQUALITY distinguishedNameMatch SYNTAX 1
 .3.6.1.4.1.1466.115.121.1.12 SINGLE-VALUE )
olcAttributeTypes: {3}( 1.3.6.1.4.1.5923.1.1.1.4 NAME &apos;eduPersonOrgUnitDN&apos; DES
 C &apos;eduPerson per Internet2 and EDUCAUSE&apos; EQUALITY distinguishedNameMatch SYNT
 AX 1.3.6.1.4.1.1466.115.121.1.12 )
olcAttributeTypes: {4}( 1.3.6.1.4.1.5923.1.1.1.5 NAME &apos;eduPersonPrimaryAffilia
 tion&apos; DESC &apos;eduPerson per Internet2 and EDUCAUSE&apos; EQUALITY caseIgnoreMatch SU
 BSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 SINGLE-VA
 LUE )
olcAttributeTypes: {5}( 1.3.6.1.4.1.5923.1.1.1.6 NAME &apos;eduPersonPrincipalName&apos;
  DESC &apos;eduPerson per Internet2 and EDUCAUSE&apos; EQUALITY caseIgnoreMatch SUBSTR
  caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 SINGLE-VALUE )
olcAttributeTypes: {6}( 1.3.6.1.4.1.5923.1.1.1.7 NAME &apos;eduPersonEntitlement&apos; D
 ESC &apos;eduPerson per Internet2 and EDUCAUSE&apos; EQUALITY caseExactMatch SYNTAX 1.3
 .6.1.4.1.1466.115.121.1.15 )
olcAttributeTypes: {7}( 1.3.6.1.4.1.5923.1.1.1.8 NAME &apos;eduPersonPrimaryOrgUnit
 DN&apos; DESC &apos;eduPerson per Internet2 and EDUCAUSE&apos; EQUALITY distinguishedNameMat
 ch SYNTAX 1.3.6.1.4.1.1466.115.121.1.12 SINGLE-VALUE )
olcAttributeTypes: {8}( 1.3.6.1.4.1.5923.1.1.1.9 NAME &apos;eduPersonScopedAffiliat
 ion&apos; DESC &apos;eduPerson per Internet2 and EDUCAUSE&apos; EQUALITY caseIgnoreMatch SYN
 TAX 1.3.6.1.4.1.1466.115.121.1.15 )
olcAttributeTypes: {9}( 1.3.6.1.4.1.5923.1.1.1.10 NAME &apos;eduPersonTargetedID&apos; D
 ESC &apos;eduPerson per Internet2 and EDUCAUSE&apos; EQUALITY caseIgnoreMatch SYNTAX 1.
 3.6.1.4.1.1466.115.121.1.15 )
olcAttributeTypes: {10}( 1.3.6.1.4.1.5923.1.1.1.11 NAME &apos;eduPersonAssurance&apos; D
 ESC &apos;eduPerson per Internet2 and EDUCAUSE&apos; EQUALITY caseIgnoreMatch SYNTAX 1.
 3.6.1.4.1.1466.115.121.1.15 )
olcAttributeTypes: {11}( 1.3.6.1.4.1.5923.1.1.1.12 NAME &apos;eduPersonPrincipalNam
 ePrior&apos; DESC &apos;eduPersonPrincipalNamePrior per Internet2&apos;  EQUALITY caseIgnore
 Match SYNTAX &apos;1.3.6.1.4.1.1466.115.121.1.15&apos; )
olcAttributeTypes: {12}( 1.3.6.1.4.1.5923.1.1.1.13 NAME &apos;eduPersonUniqueId&apos; DE
 SC &apos;eduPersonUniqueId per Internet2&apos; EQUALITY caseIgnoreMatch SYNTAX &apos;1.3.6.1
 .4.1.1466.115.121.1.15&apos; )
olcObjectClasses: {0}( 1.3.6.1.4.1.5923.1.1.2 NAME &apos;eduPerson&apos; DESC &apos;eduPerson
  per Internet2 and EDUCAUSE 201310&apos; AUXILIARY MAY ( eduPersonAffiliation $ ed
 uPersonNickname $ eduPersonOrgDN $ eduPersonOrgUnitDN $ eduPersonPrimaryAffil
 iation $ eduPersonPrincipalName $ eduPersonEntitlement $ eduPersonPrimaryOrgU
 nitDN $ eduPersonScopedAffiliation $ eduPersonTargetedID $ eduPersonAssurance
 $ eduPersonPrincipalNamePrior $ eduPersonUniqueId ) )
EOF

sudo ldapadd -Y EXTERNAL -H ldapi:// -f /etc/openldap/schema/cosine.ldif || if [ $? -ne 80 ]; then  exit 1; fi
sudo ldapadd -Y EXTERNAL -H ldapi:// -f /etc/openldap/schema/nis.ldif || if [ $? -ne 80 ]; then  exit 1; fi
sudo ldapadd -Y EXTERNAL -H ldapi:// -f /etc/openldap/schema/inetorgperson.ldif || if [ $? -ne 80 ]; then  exit 1; fi
sudo ldapadd -Y EXTERNAL -H ldapi:// -f  eduPerson.ldif || if [ $? -ne 80 ]; then  exit 1; fi

</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.envfile.EnvFileBuildWrapper plugin="envfile@1.2">
      <filePath>/var/lib/jenkins/demo-config/shibboleth-idp.conf</filePath>
    </hudson.plugins.envfile.EnvFileBuildWrapper>
  </buildWrappers>
</project>