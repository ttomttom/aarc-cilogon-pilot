<?xml version="1.0" encoding="UTF-8"?>
<project>
  <actions/>
  <description>Configure oa4mp server with a simple setup using file storage as backend. Every relevant server information is kept under /usr/www/server by default&#13;
&#13;
Accepted options:&#13;
&#13;
SERVER_DIR                             (required)&#13;
SERVER_CONF_DIR                  (required)&#13;
SERVER_CONF_FILE                 (required)&#13;
SERVER_STORE_DIR                (required)&#13;
SERVER_LOG_DIR                    (required)&#13;
SERVER_KEYSTORE_PASS      (required)&#13;
SERVER_KEYSTORE                 (required)</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>oa4mp-server</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># Modify tomcats web.xml to reference the ouath2 server config files in a ContextParameter

if [ -z "`xmlstarlet sel -T -N x="http://java.sun.com/xml/ns/javaee" \
         -t -i x:web-app/x:context-param -o exists ${CATALINA_HOME}/conf/web.xml`" ]; then

        sudo xmlstarlet ed -L -N x="http://java.sun.com/xml/ns/javaee" -s /x:web-app -t elem -n file-context -v "" \
                       -s //file-context -t elem -n param-name -v "oa4mp:oauth2.server.config.file" \
                       -s //file-context -t elem -n param-value -v "${SERVER_CONF_FILE}" \
                       -r //file-context -v context-param \
                       ${CATALINA_HOME}/conf/web.xml


        sudo xmlstarlet ed -L -N x="http://java.sun.com/xml/ns/javaee" -s /x:web-app -t elem -n config-context -v "" \
                       -s //config-context -t elem -n param-name -v "oa4mp:oauth2.server.config.name" \
                       -s //config-context -t elem -n param-value -v "default" \
                       -r //config-context -v context-param \
                       ${CATALINA_HOME}/conf/web.xml

        # for some reason the formatting command exists with a non-zero return value, triggering failure
        sudo xmlstarlet fo -t -o ${CATALINA_HOME}/conf/web.xml &gt; /tmp/web.xml || echo "formating xml"
        sudo mv /tmp/web.xml ${CATALINA_HOME}/conf/web.xml
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>sudo rm -rf "${SERVER_DIR}"

sudo mkdir -p "${SERVER_CONF_DIR}"
sudo mkdir -p "${SERVER_STORE_DIR}"
sudo mkdir -p "${SERVER_LOG_DIR}"

sudo openssl pkcs12 -export -in /etc/grid-security/hostcert.pem -inkey /etc/grid-security/hostkey.pem \
                    -out ${SERVER_KEYSTORE} -passout pass:${SERVER_KEYSTORE_PASS}

sudo chmod 400 ${SERVER_KEYSTORE}

sudo rm -rf "${SERVER_CONF_FILE}"
sudo tee "${SERVER_CONF_FILE}" &lt;&lt;EOF
&lt;config&gt;

    &lt;service name="default" alias="idp-config"/&gt;

    &lt;!-- ############################################################################## --&gt;

    &lt;service name="idp-config" address="https://${HOSTNAME}/oauth2" debug="true"&gt;

       &lt;logging
                 logFileName="${SERVER_LOG_DIR}/oauth2.log"
                 logName="oauth2"
                 logSize="1000000"
                 logFileCount="2"
                 debug="true"
                 disableLog4j="false"
       /&gt;

       &lt;fileStore path="${SERVER_STORE_DIR}"&gt;
               &lt;transactions/&gt;
               &lt;clients/&gt;
               &lt;clientApprovals/&gt;
       &lt;/fileStore&gt;

       &lt;myproxy host="localhost" port="7512"&gt;
                 &lt;keystore path="${SERVER_KEYSTORE}"
                           type="pkcs12"
                           password="${SERVER_KEYSTORE_PASS}"
                           factory="SunX509" /&gt;
       &lt;/myproxy&gt;

       &lt;authorizationServlet useHeader="true" headerFieldName="mail" /&gt;

    &lt;/service&gt;

&lt;/config&gt;
EOF

sudo chown -R tomcat:tomcat "${SERVER_DIR}"</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.envfile.EnvFileBuildWrapper plugin="envfile@1.2">
      <filePath>/var/lib/jenkins/demo-config/delegation-service.conf</filePath>
    </hudson.plugins.envfile.EnvFileBuildWrapper>
  </buildWrappers>
</project>
