<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Configure oa4mp server with a simple setup using file storage as backend. Every relevant server information is kept under /usr/www/server by default&#xd;
&#xd;
Accepted options:&#xd;
&#xd;
SERVER_DIR                             (required)&#xd;
SERVER_CONF_DIR                  (required)&#xd;
SERVER_CONF_FILE                 (required)&#xd;
SERVER_STORE_DIR                (required)&#xd;
SERVER_LOG_DIR                    (required)&#xd;
SERVER_KEYSTORE_PASS      (required)&#xd;
SERVER_KEYSTORE                 (required)</description>
  <keepDependencies>false</keepDependencies>
  <properties>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>oa4mp-server</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># Modify tomcats web.xml to reference the ouath2 server config files in a ContextParameter

if [ -z &quot;`xmlstarlet sel -T -N x=&quot;http://java.sun.com/xml/ns/javaee&quot; \
         -t -i x:web-app/x:context-param -o exists ${CATALINA_HOME}/conf/web.xml`&quot; ]; then

        sudo xmlstarlet ed -L -N x=&quot;http://java.sun.com/xml/ns/javaee&quot; -s /x:web-app -t elem -n file-context -v &quot;&quot; \
                       -s //file-context -t elem -n param-name -v &quot;oa4mp:oauth2.server.config.file&quot; \
                       -s //file-context -t elem -n param-value -v &quot;${SERVER_CONF_FILE}&quot; \
                       -r //file-context -v context-param \
                       ${CATALINA_HOME}/conf/web.xml


        sudo xmlstarlet ed -L -N x=&quot;http://java.sun.com/xml/ns/javaee&quot; -s /x:web-app -t elem -n config-context -v &quot;&quot; \
                       -s //config-context -t elem -n param-name -v &quot;oa4mp:oauth2.server.config.name&quot; \
                       -s //config-context -t elem -n param-value -v &quot;default&quot; \
                       -r //config-context -v context-param \
                       ${CATALINA_HOME}/conf/web.xml

        # for some reason the formatting command exists with a non-zero return value, triggering failure
        sudo xmlstarlet fo -t -o ${CATALINA_HOME}/conf/web.xml &gt; /tmp/web.xml || echo &quot;formating xml&quot;
        sudo mv /tmp/web.xml ${CATALINA_HOME}/conf/web.xml
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>sudo rm -rf &quot;${SERVER_DIR}&quot;

sudo mkdir -p &quot;${SERVER_CONF_DIR}&quot;
sudo mkdir -p &quot;${SERVER_STORE_DIR}&quot;
sudo mkdir -p &quot;${SERVER_LOG_DIR}&quot;

sudo openssl pkcs12 -export -in /etc/grid-security/hostcert.pem -inkey /etc/grid-security/hostkey.pem \
                    -out ${SERVER_KEYSTORE} -passout pass:${SERVER_KEYSTORE_PASS}

sudo chmod 400 ${SERVER_KEYSTORE}

sudo rm -rf &quot;${SERVER_CONF_FILE}&quot;
sudo tee &quot;${SERVER_CONF_FILE}&quot; &lt;&lt;EOF
&lt;config&gt;

    &lt;service name=&quot;default&quot; alias=&quot;idp-config&quot;/&gt;

    &lt;!-- ############################################################################## --&gt;

    &lt;service name=&quot;idp-config&quot; address=&quot;https://${HOSTNAME}/oauth2&quot; debug=&quot;true&quot;&gt;

       &lt;logging
                 logFileName=&quot;${SERVER_LOG_DIR}/oauth2.log&quot;
                 logName=&quot;oauth2&quot;
                 logSize=&quot;1000000&quot;
                 logFileCount=&quot;2&quot;
                 debug=&quot;true&quot;
                 disableLog4j=&quot;false&quot;
       /&gt;

       &lt;fileStore path=&quot;${SERVER_STORE_DIR}&quot;&gt;
               &lt;transactions/&gt;
               &lt;clients/&gt;
               &lt;clientApprovals/&gt;
       &lt;/fileStore&gt;

       &lt;myproxy host=&quot;localhost&quot; port=&quot;7512&quot;&gt;
                 &lt;keystore path=&quot;${SERVER_KEYSTORE}&quot;
                           type=&quot;pkcs12&quot;
                           password=&quot;${SERVER_KEYSTORE_PASS}&quot;
                           factory=&quot;SunX509&quot; /&gt;
       &lt;/myproxy&gt;

       &lt;authorizationServlet useHeader=&quot;true&quot; headerFieldName=&quot;mail&quot; /&gt;

    &lt;/service&gt;

&lt;/config&gt;
EOF

sudo chown -R tomcat:tomcat &quot;${SERVER_DIR}&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.envfile.EnvFileBuildWrapper plugin="envfile@1.2">
      <filePath>/var/lib/jenkins/demo-config/delegation-service.conf</filePath>
    </hudson.plugins.envfile.EnvFileBuildWrapper>
  </buildWrappers>
</project>