<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This task is meant to configure an already installed shibboleth + tomcat node by:&#xd;
&#xd;
It creates a hostcert/hostkey pair and configures tomcat to use this for enabling SSL on port 443.&#xd;
Configure shibboleth attribute release (attribute-release.xml) with a set of attributes definitions (eduPersonPrincipalName,uid,cn,mail)&#xd;
Configure shibboleth attribute filter (attribute-filter.xml) to release the attributes defined above to any SP.&#xd;
&#xd;
Accepted options:&#xd;
&#xd;
TOMCAT_KS_PASS          (optional)    changeit&#xd;
TOMCAT_KS_FILE            (optional)    /etc/grid-security/tomcat-keystore</description>
  <keepDependencies>false</keepDependencies>
  <properties>
  <assignedNode>idp</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#configure the shibboleth installation

TOMCAT_CONF=&quot;/etc/tomcat/tomcat.conf&quot;
TOMCAT_CONF_DIR=&quot;${CATALINA_HOME}/conf&quot;

SHIB_DIR=&quot;/opt/shibboleth-install&quot;
SHIB_INSTALL_DIR=&quot;/opt/shibboleth-idp&quot;
SHIB_INSTALL_PROPERTIES=&quot;`pwd`/shib.properties&quot;

SHIB_SEALER_STOREPWD=${SHIB_SEALER_STOREPWD:-changeit}
SHIB_SEALER_KEYPWD=${SHIB_SEALER_KEYPWD:-changeit}
SHIB_SEALER_PWD=${SHIB_SEALER_PWD:-changeit}
SHIB_KEYSTORE_PWD=${SHIB_KEYSTORE_PWD:-changeit}

##############################################################################################

# create idp.merge.properties file
cat &gt; &quot;${SHIB_INSTALL_PROPERTIES}&quot; &lt;&lt;EOF
idp.sealer.storePassword= ${SHIB_SEALER_STOREPWD}
idp.sealer.keyPassword= ${SHIB_SEALER_KEYPWD}
idp.entityID= https://`hostname`/idp/shibboleth
idp.scope= `dnsdomainname`
EOF

# install shibboleth
if [ -z &quot;`ls -A ${SHIB_INSTALL_DIR}`&quot; ]; then
	pushd ${SHIB_DIR}/*/
	./bin/install.sh	  -Didp.src.dir=. \
     	                  -Didp.target.dir=&quot;${SHIB_INSTALL_DIR}&quot; \
     	                  -Didp.merge.properties=&quot;${SHIB_INSTALL_PROPERTIES}&quot; \
     	                  -Didp.host.name=`hostname` \
     	                  -Didp.scope=`dnsdomainname` \
     	                  -Didp.sealer.password=&quot;${SHIB_SEALER_PWD}&quot; \
     	                  -Didp.keystore.password=&quot;${SHIB_KEYSTORE_PWD}&quot;
	popd
fi

# setting up tomcat for shibboleth idp
# tomcat will find the .war to deploy by this config file
cat &gt; idp.xml &lt;&lt;EOF
&lt;Context docBase=&quot;${SHIB_INSTALL_DIR}/war/idp.war&quot;
               privileged=&quot;true&quot;
               antiResourceLocking=&quot;false&quot;
               swallowOutput=&quot;true&quot; /&gt;
EOF
sudo cp idp.xml ${CATALINA_HOME}/conf/Catalina/localhost/idp.xml

# define idp.home for tomcat
sudo sed -i &quot;s/CATALINA_OPTS=.*/CATALINA_OPTS=&apos;-Xmx512m -XX:MaxPermSize=128m -Didp.home=\/opt\/shibboleth-idp\&apos;/&quot; ${TOMCAT_CONF}
# downalod jstl support
wget -q https://build.shibboleth.net/nexus/service/local/repositories/thirdparty/content/javax/servlet/jstl/1.2/jstl-1.2.jar \
     -O jstl-1.2.jar 
sudo cp jstl-1.2.jar ${CATALINA_HOME}/lib/
# disable session persistence in tomcat
if [ -z &quot;`xmlstarlet sel -T -t -i &quot;/Context/Manager&quot; -o exists ${TOMCAT_CONF_DIR}/context.xml`&quot; ]; then
        sudo xmlstarlet ed -L -s &quot;/Context&quot; --type elem -n &quot;Manager&quot;  \
                -i &quot;//Manager&quot; -t attr -n &quot;pathname&quot; -v &quot;&quot; \
                 ${TOMCAT_CONF_DIR}/context.xml
fi
# give permission to tomcat over the shibboleth installation
sudo chown -R tomcat:tomcat ${SHIB_INSTALL_DIR}
# change the java version used in JSP compilation to 1.7 (1.6 is not supported anymore)
if [ -z `xmlstarlet sel -T -N x=&quot;http://java.sun.com/xml/ns/javaee&quot; -t \
        -i &quot;/x:web-app/x:servlet[x:servlet-name=&apos;jsp&apos;]/x:init-param[x:param-name=&apos;compilerSourceVM&apos;]&quot; \
        -o exists -n ${TOMCAT_CONF_DIR}/web.xml` ]; then

        sudo xmlstarlet ed -L -N x=&quot;http://java.sun.com/xml/ns/javaee&quot; \
                -s &quot;/x:web-app/x:servlet[x:servlet-name=&apos;jsp&apos;]&quot; --type elem -n &quot;init-param-tmp&quot; \
                -s //init-param-tmp --type elem -n &quot;param-name&quot; -v &quot;compilerSourceVM&quot; \
                -s //init-param-tmp --type elem -n &quot;param-value&quot; -v &quot;1.7&quot; \
                -r //init-param-tmp -v &quot;init-param&quot; ${TOMCAT_CONF_DIR}/web.xml

fi
if [ -z `xmlstarlet sel -T -N x=&quot;http://java.sun.com/xml/ns/javaee&quot; -t \
        -i &quot;/x:web-app/x:servlet[x:servlet-name=&apos;jsp&apos;]/x:init-param[x:param-name=&apos;compilerTargetVM&apos;]&quot; \
        -o exists -n ${TOMCAT_CONF_DIR}/web.xml` ]; then

        sudo xmlstarlet ed -L -N x=&quot;http://java.sun.com/xml/ns/javaee&quot; \
                -s &quot;/x:web-app/x:servlet[x:servlet-name=&apos;jsp&apos;]&quot; --type elem -n &quot;init-param-tmp&quot; \
                -s //init-param-tmp --type elem -n &quot;param-name&quot; -v &quot;compilerTargetVM&quot; \
                -s //init-param-tmp --type elem -n &quot;param-value&quot; -v &quot;1.7&quot; \
                -r //init-param-tmp -v &quot;init-param&quot; ${TOMCAT_CONF_DIR}/web.xml

fi
</command>
    </hudson.tasks.Shell>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.28">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.NodeParameters/>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
          </configs>
          <projects>certificates-master.inject-hostcert</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.tasks.Shell>
      <command># copy certificate into keystore
TOMCAT_KS_PASS=${TOMCAT_KS_PASS:-changeit}
TOMCAT_KS_FILE=${TOMCAT_KS_FILE:-/etc/grid-security/tomcat-keystore}

sudo openssl pkcs12 -export -in /etc/grid-security/hostcert.pem -inkey /etc/grid-security/hostkey.pem \
                    -out /etc/grid-security/hostcert.p12 -name tomcat -CApath /etc/grid-security/certificates \
                    -caname root -chain -passout pass:${TOMCAT_KS_PASS}

sudo keytool -importkeystore -noprompt -srckeystore /etc/grid-security/hostcert.p12 -srcstorepass ${TOMCAT_KS_PASS} \
             -destkeystore ${TOMCAT_KS_FILE} -srcstoretype pkcs12 -storepass ${TOMCAT_KS_PASS}

sudo chmod 600 /etc/grid-security/hostcert.p12 ${TOMCAT_KS_FILE}
sudo chown tomcat:tomcat ${TOMCAT_KS_FILE}

# configure ssl in tomcat
if [ -z `xmlstarlet sel -T -t -i &quot;/Server/Service/Connector[@port=&apos;8443&apos;]&quot; -o exists ${CATALINA_HOME}/conf/server.xml` ]; then

        sudo xmlstarlet ed -L -s /Server/Service -t elem -n SSLConnector -v &quot;&quot; \
                       -i //SSLConnector -t attr -n &quot;port&quot; -v &quot;443&quot; \
                       -i //SSLConnector -t attr -n &quot;protocol&quot; -v &quot;org.apache.coyote.http11.Http11Protocol&quot; \
                       -i //SSLConnector -t attr -n &quot;SSLEnabled&quot; -v &quot;true&quot; \
                       -i //SSLConnector -t attr -n &quot;maxThreads&quot; -v &quot;150&quot; \
                       -i //SSLConnector -t attr -n &quot;scheme&quot; -v &quot;https&quot; \
                       -i //SSLConnector -t attr -n &quot;secure&quot; -v &quot;true&quot; \
                       -i //SSLConnector -t attr -n &quot;clientAuth&quot; -v &quot;false&quot; \
                       -i //SSLConnector -t attr -n &quot;sslProtocol&quot; -v &quot;TLS&quot; \
                       -i //SSLConnector -t attr -n &quot;keystoreFile&quot; -v &quot;${TOMCAT_KS_FILE}&quot; \
                       -i //SSLConnector -t attr -n &quot;keystorePass&quot; -v &quot;${TOMCAT_KS_PASS}&quot; \
                       -r //SSLConnector -v Connector \
                       ${CATALINA_HOME}/conf/server.xml
fi

# change port 8080 to 80 and 8443 to 443
sudo sed -i &apos;s/port=&quot;8080&quot;/port=&quot;80&quot;/g&apos; ${CATALINA_HOME}/conf/server.xml
sudo sed -i &apos;s/redirectPort=&quot;8443&quot;/redirectPort=&quot;443&quot;/g&apos; ${CATALINA_HOME}/conf/server.xml
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>SHIB_ATTRIBUTE_RESOLVER=&quot;/opt/shibboleth-idp/conf/attribute-resolver.xml&quot;

cat &gt; attribute-resolver.xml &lt;&lt;EOF
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;resolver:AttributeResolver
        xmlns:resolver=&quot;urn:mace:shibboleth:2.0:resolver&quot; 
        xmlns:pc=&quot;urn:mace:shibboleth:2.0:resolver:pc&quot;
        xmlns:ad=&quot;urn:mace:shibboleth:2.0:resolver:ad&quot; 
        xmlns:dc=&quot;urn:mace:shibboleth:2.0:resolver:dc&quot;
        xmlns:enc=&quot;urn:mace:shibboleth:2.0:attribute:encoder&quot; 
        xmlns:sec=&quot;urn:mace:shibboleth:2.0:security&quot;
        xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; 
        xsi:schemaLocation=&quot;urn:mace:shibboleth:2.0:resolver http://shibboleth.net/schema/idp/shibboleth-attribute-resolver.xsd
                            urn:mace:shibboleth:2.0:resolver:pc http://shibboleth.net/schema/idp/shibboleth-attribute-resolver-pc.xsd
                            urn:mace:shibboleth:2.0:resolver:ad http://shibboleth.net/schema/idp/shibboleth-attribute-resolver-ad.xsd
                            urn:mace:shibboleth:2.0:resolver:dc http://shibboleth.net/schema/idp/shibboleth-attribute-resolver-dc.xsd
                            urn:mace:shibboleth:2.0:attribute:encoder http://shibboleth.net/schema/idp/shibboleth-attribute-encoder.xsd
                            urn:mace:shibboleth:2.0:security http://shibboleth.net/schema/idp/shibboleth-security.xsd&quot;&gt;


    &lt;!-- ========================================== --&gt;
    &lt;!--      Attribute Definitions                 --&gt;
    &lt;!-- ========================================== --&gt;

    &lt;!--
    The EPPN is the &quot;standard&quot; federated username in higher ed.
    For guidelines on the implementation of this attribute, refer
    to the Shibboleth and eduPerson documentation. Above all, do
    not expose a value for this attribute without considering the
    long term implications. 
    --&gt;
    &lt;resolver:AttributeDefinition id=&quot;eduPersonPrincipalName&quot; xsi:type=&quot;ad:Prescoped&quot; sourceAttributeID=&quot;mail&quot;&gt;
        &lt;resolver:Dependency ref=&quot;myLDAP&quot; /&gt;
        &lt;resolver:AttributeEncoder xsi:type=&quot;enc:SAML1ScopedString&quot; name=&quot;urn:mace:dir:attribute-def:eduPersonPrincipalName&quot; encodeType=&quot;false&quot;/&gt;
        &lt;resolver:AttributeEncoder xsi:type=&quot;enc:SAML2ScopedString&quot; name=&quot;urn:oid:1.3.6.1.4.1.5923.1.1.1.6&quot; friendlyName=&quot;eduPersonPrincipalName&quot; encodeType=&quot;false&quot; /&gt;
    &lt;/resolver:AttributeDefinition&gt;

    &lt;!--
    The uid is the closest thing to a &quot;standard&quot; LDAP attribute
    representing a local username, but you should generally *never*
    expose uid to federated services, as it is rarely globally unique.
    --&gt;
    &lt;resolver:AttributeDefinition id=&quot;uid&quot; xsi:type=&quot;ad:Simple&quot; sourceAttributeID=&quot;uid&quot;&gt;
        &lt;resolver:Dependency ref=&quot;myLDAP&quot; /&gt;
        &lt;resolver:AttributeEncoder xsi:type=&quot;enc:SAML1String&quot; name=&quot;urn:mace:dir:attribute-def:uid&quot; encodeType=&quot;false&quot; /&gt;
        &lt;resolver:AttributeEncoder xsi:type=&quot;enc:SAML2String&quot; name=&quot;urn:oid:0.9.2342.19200300.100.1.1&quot; friendlyName=&quot;uid&quot; encodeType=&quot;false&quot; /&gt;
    &lt;/resolver:AttributeDefinition&gt;

    &lt;!--
    In the rest of the world, the email address is the standard identifier,
    despite the problems with that practice. Consider making the EPPN value
    the same as your official email addresses whenever possible.
    --&gt;
    &lt;resolver:AttributeDefinition id=&quot;mail&quot; xsi:type=&quot;ad:Simple&quot; sourceAttributeID=&quot;mail&quot;&gt;
        &lt;resolver:Dependency ref=&quot;myLDAP&quot; /&gt;
        &lt;resolver:AttributeEncoder xsi:type=&quot;enc:SAML1String&quot; name=&quot;urn:mace:dir:attribute-def:mail&quot; encodeType=&quot;false&quot; /&gt;
        &lt;resolver:AttributeEncoder xsi:type=&quot;enc:SAML2String&quot; name=&quot;urn:oid:0.9.2342.19200300.100.1.3&quot; friendlyName=&quot;mail&quot; encodeType=&quot;false&quot; /&gt;
    &lt;/resolver:AttributeDefinition&gt;

    &lt;resolver:AttributeDefinition id=&quot;cn&quot; xsi:type=&quot;ad:Simple&quot; sourceAttributeID=&quot;cn&quot;&gt;
        &lt;resolver:Dependency ref=&quot;myLDAP&quot; /&gt;
        &lt;resolver:AttributeEncoder xsi:type=&quot;enc:SAML1String&quot; name=&quot;urn:mace:dir:attribute-def:cn&quot; encodeType=&quot;false&quot; /&gt;
        &lt;resolver:AttributeEncoder xsi:type=&quot;enc:SAML2String&quot; name=&quot;urn:oid:2.5.4.3&quot; friendlyName=&quot;cn&quot; encodeType=&quot;false&quot; /&gt;
    &lt;/resolver:AttributeDefinition&gt;

    &lt;resolver:AttributeDefinition xsi:type=&quot;ad:Simple&quot; id=&quot;organizationName&quot; sourceAttributeID=&quot;mail&quot;&gt;
        &lt;resolver:Dependency ref=&quot;myLDAP&quot; /&gt;
        &lt;resolver:AttributeEncoder xsi:type=&quot;enc:SAML1String&quot; name=&quot;urn:mace:dir:attribute-def:o&quot; encodeType=&quot;false&quot; /&gt;
        &lt;resolver:AttributeEncoder xsi:type=&quot;enc:SAML2String&quot; name=&quot;urn:oid:2.5.4.10&quot; friendlyName=&quot;o&quot; encodeType=&quot;false&quot; /&gt;
    &lt;/resolver:AttributeDefinition&gt;

    &lt;!-- ========================================== --&gt;
    &lt;!--      Data Connectors                       --&gt;
    &lt;!-- ========================================== --&gt;

    &lt;!--
    Example LDAP Connector
    
    The connectivity details can be specified in ldap.properties to
    share them with your authentication settings if desired.
    --&gt;
    &lt;resolver:DataConnector id=&quot;myLDAP&quot; xsi:type=&quot;dc:LDAPDirectory&quot;
        ldapURL=&quot;%{idp.attribute.resolver.LDAP.ldapURL}&quot;
        baseDN=&quot;%{idp.attribute.resolver.LDAP.baseDN}&quot; 
        principal=&quot;%{idp.attribute.resolver.LDAP.bindDN}&quot;
        principalCredential=&quot;%{idp.attribute.resolver.LDAP.bindDNCredential}&quot;
        useStartTLS=&quot;%{idp.attribute.resolver.LDAP.useStartTLS:true}&quot;&gt;
        &lt;dc:FilterTemplate&gt;
            &lt;![CDATA[
                %{idp.attribute.resolver.LDAP.searchFilter}
            ]]&gt;
        &lt;/dc:FilterTemplate&gt;
        &lt;dc:StartTLSTrustCredential id=&quot;LDAPtoIdPCredential&quot; xsi:type=&quot;sec:X509ResourceBacked&quot;&gt;
            &lt;sec:Certificate&gt;%{idp.attribute.resolver.LDAP.trustCertificates}&lt;/sec:Certificate&gt;
        &lt;/dc:StartTLSTrustCredential&gt;
    &lt;/resolver:DataConnector&gt;

&lt;/resolver:AttributeResolver&gt;

EOF

sudo cp -f attribute-resolver.xml ${SHIB_ATTRIBUTE_RESOLVER}
sudo chown tomcat:tomcat ${SHIB_ATTRIBUTE_RESOLVER}</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>SHIB_ATTRIBUTE_FILTER=&quot;/opt/shibboleth-idp/conf/attribute-filter.xml&quot;

cat &gt; attribute-filter.xml &lt;&lt;EOF
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!-- 
    This file is an EXAMPLE policy file.  While the policy presented in this 
    example file is illustrative of some simple cases, it relies on the names of
    non-existent example services and the example attributes demonstrated in the
    default attribute-resolver.xml file.
    
    Deployers should refer to the documentation for a complete list of components
    and their options.
--&gt;
&lt;afp:AttributeFilterPolicyGroup id=&quot;ShibbolethFilterPolicy&quot;
        xmlns:afp=&quot;urn:mace:shibboleth:2.0:afp&quot;
        xmlns:basic=&quot;urn:mace:shibboleth:2.0:afp:mf:basic&quot;
        xmlns:saml=&quot;urn:mace:shibboleth:2.0:afp:mf:saml&quot;
        xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
        xsi:schemaLocation=&quot;urn:mace:shibboleth:2.0:afp http://shibboleth.net/schema/idp/shibboleth-afp.xsd
                            urn:mace:shibboleth:2.0:afp:mf:basic http://shibboleth.net/schema/idp/shibboleth-afp-mf-basic.xsd
                            urn:mace:shibboleth:2.0:afp:mf:saml http://shibboleth.net/schema/idp/shibboleth-afp-mf-saml.xsd&quot;&gt;

&lt;afp:AttributeFilterPolicy id=&quot;releaseToAnyone&quot;&gt;

        &lt;afp:PolicyRequirementRule xsi:type=&quot;basic:ANY&quot; /&gt;

        &lt;afp:AttributeRule attributeID=&quot;eduPersonPrincipalName&quot;&gt;
            &lt;afp:PermitValueRule xsi:type=&quot;basic:ANY&quot; /&gt;
        &lt;/afp:AttributeRule&gt;

        &lt;afp:AttributeRule attributeID=&quot;uid&quot;&gt;
            &lt;afp:PermitValueRule xsi:type=&quot;basic:ANY&quot; /&gt;
        &lt;/afp:AttributeRule&gt;

        &lt;afp:AttributeRule attributeID=&quot;mail&quot;&gt;
            &lt;afp:PermitValueRule xsi:type=&quot;basic:ANY&quot; /&gt;
        &lt;/afp:AttributeRule&gt;

        &lt;afp:AttributeRule attributeID=&quot;cn&quot;&gt;
            &lt;afp:PermitValueRule xsi:type=&quot;basic:ANY&quot; /&gt;
        &lt;/afp:AttributeRule&gt;

        &lt;afp:AttributeRule attributeID=&quot;organizationName&quot;&gt;
            &lt;afp:PermitValueRule xsi:type=&quot;basic:ANY&quot; /&gt;
        &lt;/afp:AttributeRule&gt;

 &lt;/afp:AttributeFilterPolicy&gt;

&lt;/afp:AttributeFilterPolicyGroup&gt;
EOF

sudo cp -f attribute-filter.xml ${SHIB_ATTRIBUTE_FILTER}
sudo chown tomcat:tomcat ${SHIB_ATTRIBUTE_FILTER}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.envfile.EnvFileBuildWrapper plugin="envfile@1.2">
      <filePath>/var/lib/jenkins/demo-config/shibboleth-idp.conf</filePath>
    </hudson.plugins.envfile.EnvFileBuildWrapper>
  </buildWrappers>
</project>
